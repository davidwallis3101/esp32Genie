language: generic #python #c

python:
  - "2.7"

os:
  - linux

env:
  global:
    - IDE_VERSION=1.8.3

before_install:
  # Configure xfb
  # The Arduino IDE CLI currently requires a graphical user interface to be present
  # https://docs.travis-ci.com/user/gui-and-headless-browsers/#Using-xvfb-to-Run-Tests-That-Require-GUI-(e.g.-a-Web-browser)
  - "/sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_1.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :1 -ac -screen 0 1280x1024x16"
  - sleep 3
  - export DISPLAY=:1.0

  # Download and install arduino software
  - wget http://downloads.arduino.cc/arduino-$IDE_VERSION-linux64.tar.xz
  - tar xf arduino-$IDE_VERSION-linux64.tar.xz
  - sudo mv arduino-$IDE_VERSION ~/arduino-ide
  - export PATH=$PATH:~/arduino-ide


  # Configure for Esp32
  - mkdir -p ~/Arduino/hardware/espressif #&&
  - cd ~/Arduino/hardware/espressif #&&
  - git clone https://github.com/espressif/arduino-esp32.git esp32 #&&
  - cd esp32/tools/ #&&
  - python get.py #&&
  - cd $TRAVIS_BUILD_DIR;


install:
  - mkdir -p ~/Arduino/libraries
  - ln -s $PWD ~/Arduino/libraries/.

  #- ln -s $PWD /usr/local/share/arduino/libraries/Adafruit_FONA
  # boards manager not working on 1.6.7 - 1.6.8
  # - arduino --pref "boardsmanager.additional.urls=http://arduino.esp8266.com/stable/package_esp8266com_index.json" --save-prefs

  # Install required librarys
  - arduino --install-library "Adafruit SleepyDog Library,Adafruit MQTT Library"
  # Select Board
  - arduino --board esp8266:esp8266:generic --save-prefs
  # Set Preferences
  - arduino --pref "compiler.warning_level=all" --save-prefs

 # - git clone https://github.com/bblanchon/ArduinoJson /usr/local/share/arduino/libraries/ArduinoJson

script:

  - "echo $PWD"
  - "echo $HOME"
  - "ls $PWD"
  # - source $TRAVIS_BUILD_DIR/travis/common.sh

  # - build_examples
  - arduino --verbose-build --verify --board espressif:esp32:esp32:FlashFreq=80 $PWD/examples/$EXAMPLE/$EXAMPLE.ino;
  #- arduino --verify --board arduino:avr:uno $PWD/examples/FONAtest/FONAtest.ino
  #- arduino --verify --board arduino:avr:uno $PWD/examples/IncomingCall/IncomingCall.ino
  #- arduino --verify --board arduino:avr:uno $PWD/examples/AdafruitIO_GPS/AdafruitIO_GPS.ino

after_success:
  # - bash <(curl -s https://codecov.io/bash

notifications:
  email:
    on_success: change
    on_failure: change